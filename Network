DAY 1 ### NETWORK FUNDAMENTALS ###
Mathematics of Networking

Binary Identification
- Bit is on/off 



Number of Bits 
1          Bit/Flag
4          Nibble
8          Byte/Octet
16         Half Word
32         Word
64         Very Long Word


Common Formats
BASE(N) FORMATS
Base(2) = 0101010101
Base(10) = 66 97 193 115 935
Base(16) = 42 61 73 1A 4D
Base(64) = QmFzZSA2NA==

Message Formatting Method
Encapsulation and Decapsulation
- When tansfering data, layer headers on taken off when they hit their respective layers
- Same when getting ready to send data, it covers the data with the appropriate layers 

RFC(REQUEST FOR COMMENT)
- text file that goes in depth of certain topic 
- standard for information

OSI MODEL
Physical Layer
- Hardware Specifications 
- Encoding and Signaling 
- Data Transmission and Reception
- Physical Network Design

Data Link Sub-Layers
Two Types
- MAC (Media Access Control)
- LLC (Logical Link Control)

Ethernet Header
- Dest. MAC [01 - 06]
- Src. MAC [07 - 12]
- Ethertype [13 - 14] ## is important since it shows the next layer type 

if you use a VLAN Ethertype it will add 4 bytes 
- Tag Protocol ID (0x8100)
- PCP/DEI (3 bits)
- QoS (1 bit)
- VLAN ID (12 bits)

ARP Header in Slides

ECN Bit Shift for actual number ??
DSCP is 3 Nibbles and ECN is 1 Nibble

Network Header
How to calculate fragementation offset Formula (Miro Ship Example)

Fingerprinting 
Gives best guess of OS with the Networking Standard

ICMP is ping but also other things
ping is two types of ICMP traffic Echo Request/Echo Reply

Transport Layer
two transporting types (TCP and UDP)
- TCP Flags are important since they start the three-way handshake

TCP Flags 

Coach Explained to the University of Alabama to Play Really Strong Football
TCP Flag Breakout (Binary and Hex)
CWR == 0x128
ECN == 0x64
URG == 0x32
ACK == 0x16
PSH == 0x08
RST == 0x04
SYN == 0x02
FIN == 0x01

UDP Header


Sesion Layer
Protocols
- SOCKS
- NetBIOS
- PPTP/L2TP
- RPC

SOCKS 4/5 (TCP 1080)

PPTP (TCP 1723)

L2TP (TCP 1701)

SMB/CIFS (TCP 139/445 AND UDP 137/138)

RPC (ANY PORT)

PRESENTATION LAYER
Responsibilites
- Translation
- Formating 
- Encoding (ASCII,EBCDIC,HEX,BASE64)
- Encryption (Symmetric or Asymmetric)
### Symmetric easier to decrypt
### Asymmetric Longer to decode but no previous log on required 
- Compression

Application Layer
FTP (TCP 20/21)

Servers is a socket, what makes a server a server is the listening port on the box 

FTP needs both port 20 and 21 to work

Network Traffic Sniffing 
- Libpcap ("Linux")
- WinPcap
- NPCAP ("Current for Windows")

Userspace is anything the current user has logged into 

Wireshark, TCPDUMP and BPFS
Wireshark (options)
- protocol heiarchy
- go to wireshark preferences to see wihj mods you enjoy
- you shouldn't be able to see any traffic

BERKELEY PACKET FILTERS 
tcpdump 'ether[12:2] = 0x0800 && (tcp[2:2] != 22 && tcp[2:2] != 23)'
- looks for IPv4 Packets but not port 22 or 23
- do it through network layers, checks the ethertype and the dest. bytes 

tcpdump -r "PCAP" 'tcp[13] & 0x10 = 0x10'

tcpdump -r "PCAP" 'ip[1] & 0xFC = 4'


ARP Filter
- To find the ARP STORM find the MAC Addr Broadcasting to all
- You can also find MitM attacks if you look at traffic and see which one is directing a MAC to another location then intended
  EX: 7014 | fa:16:3e:35:21:5a | fa:16:3e:b3:e4:46 | ARP | 42 | 172.16.1.254 is at fa:16:3e:35:21:5a

Gratuitous ARP opcode is 0x02
RARP request opcode is 0x03
RARP response opcode is 0x04
To use opcodes with arp.opcode == 0x0#

CDP is Cisco Discovery Protocol ### shows Cisco Version info

Link Layer Discovery Protocol

STP is Spanning Tree Protocol
- to find the root bridge protocol priority go to Bridge Identifiers for number

Windows Sends all Keyboard values for ping messages 

ICMPv6 type #
type 128 - echo request 
type 129 - echo reply
type 134 - Router Advertisement






(9,99,99,88,214,137) these 6 numbers following in the servers response break down as follows:

First 4 are the ip address: 9.99.99.88 

The fifth and sixth numbers are the port. You take the fifth number multiply it by 256 then add the sixth number:

214 * 256 = 54784 + 137 = 54921

tls.handshake.type == 1





 student13

Command: ssh student@10.50.43.2 -X

Password: password


sudo tcpdump -r BPFCheck.pcap 'ip[6] & 64 = 64 ' | wc -l

sudo tcpdump -r BPFCheck.pcap 'ip[8] <= 64 || ip6[7] <=64' | wc -l

sudo tcpdump -r BPFCheck.pcap 'tcp[0:2] > 1024 || udp[0:2] > 1024' | wc -l

sudo tcpdump -r BPFCheck.pcap 'ip[9] = 0x11 || ip6[6] = 0x11' | wc -l

sudo tcpdump -r BPFCheck.pcap 'tcp[13] = 0x14 || tcp[13] = 0x11' | wc -l

sudo tcpdump -r BPFCheck.pcap 'ip[4:2] = 213' | wc -l
- IP ID number
sudo tcpdump -r BPFCheck.pcap 'tcp[0:2] = 53 || udp[0:2] = 53 || tcp[2:2] = 53 || udp[2:2] = 53' | wc -l

































































































